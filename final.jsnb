/*Generated by JSNB: https://github.com/gopi-suvanam/jsnb*/

scene = document.createElement('a-scene');
        scene.setAttribute('embedded', '');
        scene.setAttribute('arjs', '');

/*---------*/
marker = document.createElement('a-marker');
        marker.setAttribute('preset', 'hiro');
/*---------*/
 marker = document.createElement('a-marker');
        marker.setAttribute('preset', 'hiro');
planets = ['earth', 'jupiter', 'mars', 'saturn', 'bg', 'sun', 'uranus', 'neptune', 'venus', 'mercury'];
        planets.forEach(planet => {
            entity = document.createElement('a-entity');
            entity.setAttribute('position', '0 2 0');

            // Set specific attributes based on the planet
            if (planet === 'sun') {
                entity.setAttribute('id', 'sun');
                entity.setAttribute('position', '0 0 0');
                entity.setAttribute('radius', '0.8');
                entity.setAttribute('color', 'yellow');
            } else if (planet === 'uranus') {
                entity.setAttribute('id', 'uranus');
                entity.setAttribute('position', '0 -8 -9');
                entity.setAttribute('radius', '0.4');
                entity.setAttribute('color', 'black');
            } else if (planet === 'neptune') {
                entity.setAttribute('id', 'neptune');
                entity.setAttribute('position', '0 -9 -10');
                entity.setAttribute('radius', '0.35');
                entity.setAttribute('color', 'violet');
            } else {
                entity.setAttribute('id', planet);
                entity.setAttribute('scale', '0.2 0.2 0.2');
                entity.setAttribute('gltf-model', `${planet}.gltf`);
            }

            marker.appendChild(entity);
        });

/*---------*/
// Create audio element
audio = document.createElement('audio');
audio.setAttribute('id', 'voiceOver');
audio.setAttribute('controls', '');
audio.style.display = 'none';

source = document.createElement('source');
source.setAttribute('src', 'Solar system rhyme.mp3');
source.setAttribute('type', 'audio/mp3');

audio.appendChild(source);
audio.appendChild(document.createTextNode('Your browser does not support the audio tag.'));
/*---------*/
planets = [
                document.getElementById('mercury'),
                document.getElementById('venus'),
                document.getElementById('earth'),
                document.getElementById('mars'),
                document.getElementById('jupiter'),
                document.getElementById('saturn'),
                document.getElementById('uranus'),
                document.getElementById('neptune')
            ];
            sun = document.getElementById('sun');
/*---------*/
// Variables for animation
            time = 0;
/*---------*/
updatePlanetPositions=function() {
  orbitRadius = [2,3,4,5,6,7,8,9];
  orbitSpeeds = [0.02,0.03,0.04,0.05,0.06,0.07,0.08,0.09];

  planets.forEach((planet, index) => {
	angle = time * orbitSpeeds[index];
	x = orbitRadius[index] * Math.cos(angle);
	z = orbitRadius[index] * Math.sin(angle);

	planet.setAttribute('position', `${x} 0 ${z}`);
  });
}
/*---------*/
// Animation loop
            animate=function () {
                time += 1;
                updatePlanetPositions();
                requestAnimationFrame(animate);
            }
             playVoiceOver=function() {
                voiceOverElement = document.getElementById('voiceOver');
                if (voiceOverElement) {
                    voiceOverElement.play();
                }
            }

            // Event listener for AR marker detection
            document.querySelector('a-marker').addEventListener('markerFound', () => {
            // Trigger voice-over when the marker is found
            playVoiceOver();
            });
    
            // Start animation
            animate();
/*---------*/
document.body.appendChild(scene);
scene.appendChild(marker);
scene.appendChild(audio);